{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Universidad\\\\7mo Semestre\\\\Redes Inalambricas\\\\project\\\\src\\\\components\\\\SpectrumGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpectrumGraph = ({\n  signals,\n  noiseData\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 400\n  });\n  const [hoverPoint, setHoverPoint] = useState(null);\n  useEffect(() => {\n    const handleResize = () => {\n      var _svgRef$current;\n      if ((_svgRef$current = svgRef.current) !== null && _svgRef$current !== void 0 && _svgRef$current.parentElement) {\n        setDimensions({\n          width: svgRef.current.parentElement.clientWidth,\n          height: 400\n        });\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Calcular rango total del espectro basado en todas las señales\n  const getFrequencyRange = () => {\n    if (signals.length === 0) return {\n      minFreq: 0,\n      maxFreq: 2000\n    };\n    const freqs = signals.flatMap(s => [s.fc - s.bw / 2, s.fc + s.bw / 2]);\n    return {\n      minFreq: Math.min(...freqs),\n      maxFreq: Math.max(...freqs)\n    };\n  };\n  const {\n    minFreq,\n    maxFreq\n  } = getFrequencyRange();\n  const freqToX = freq => (freq - minFreq) / (maxFreq - minFreq) * dimensions.width;\n  const dbmToY = dbm => dimensions.height - 50 - dbm * 3; // Ajuste visual\n\n  const calculateSignalPoints = signal => {\n    const points = [];\n    const startFreq = signal.fc - signal.bw / 2;\n    const endFreq = signal.fc + signal.bw / 2;\n    for (let i = 0; i <= 100; i++) {\n      const freq = startFreq + i / 100 * (endFreq - startFreq);\n      const x = freqToX(freq);\n      const center = signal.fc;\n      const spread = signal.bw / 4;\n      const y = dbmToY(signal.power * Math.exp(-Math.pow((freq - center) / spread, 2)) // curva tipo gaussiana\n      );\n      points.push(`${x},${y}`);\n    }\n    return points.join(' ');\n  };\n  const renderSignals = () => {\n    return signals.map((signal, index) => {\n      const peakX = freqToX(signal.fc);\n      const peakY = dbmToY(signal.power);\n      const powerColor = `hsl(${index * 90}, 80%, 50%)`;\n      const halfBw = signal.bw / 2;\n      const leftFreq = signal.fc - halfBw;\n      const rightFreq = signal.fc + halfBw;\n      const levelMinus3dB = signal.power - 3;\n      const levelMinus3dB_Y = dbmToY(levelMinus3dB);\n      const xStart3dB = freqToX(leftFreq);\n      const xEnd3dB = freqToX(rightFreq);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: `M${calculateSignalPoints(signal)}`,\n          fill: \"none\",\n          stroke: powerColor,\n          strokeWidth: \"2\",\n          strokeOpacity: \"0.9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"5\",\n          y: peakY + 5,\n          fill: powerColor,\n          fontSize: \"12\",\n          fontWeight: \"bold\",\n          children: [signal.power, \" dBm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: xStart3dB,\n          y1: levelMinus3dB_Y,\n          x2: xEnd3dB,\n          y2: levelMinus3dB_Y,\n          stroke: powerColor,\n          strokeDasharray: \"4,2\",\n          strokeWidth: \"1.2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: xEnd3dB + 5,\n          y: levelMinus3dB_Y + 5,\n          fill: powerColor,\n          fontSize: \"11\",\n          children: \"-3 dBm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: peakX,\n          y: dimensions.height - 10,\n          textAnchor: \"middle\",\n          fill: \"#555\",\n          fontSize: \"11\",\n          children: signal.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, `signal-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderNoiseFloor = () => {\n    if (!noiseData) return null;\n    const noiseY = dbmToY(noiseData.totalNoise);\n    const points = [];\n    for (let i = 0; i <= 100; i++) {\n      const x = i / 100 * dimensions.width;\n      const y = noiseY + (Math.random() * 6 - 3); // leve variación\n      points.push(`${x},${y}`);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M${points.join(' ')}`,\n        fill: \"none\",\n        stroke: \"#999\",\n        strokeWidth: \"1.5\",\n        strokeOpacity: \"0.7\",\n        strokeDasharray: \"3,2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: 10,\n        y: noiseY - 5,\n        fill: \"#999\",\n        fontSize: \"12\",\n        children: [\"Ruido: \", noiseData.totalNoise, \" dBm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  const renderAxes = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"0\",\n        y1: dimensions.height - 50,\n        x2: dimensions.width,\n        y2: dimensions.height - 50,\n        stroke: \"#333\",\n        strokeWidth: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"50\",\n        y1: \"0\",\n        x2: \"50\",\n        y2: dimensions.height - 50,\n        stroke: \"#333\",\n        strokeWidth: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"0\",\n        y: dimensions.height - 30,\n        fontSize: \"11\",\n        fill: \"#444\",\n        children: [minFreq.toFixed(0), \" Hz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: dimensions.width - 40,\n        y: dimensions.height - 30,\n        fontSize: \"11\",\n        fill: \"#444\",\n        children: [maxFreq.toFixed(0), \" Hz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  const handleMouseMove = e => {\n    if (!svgRef.current) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const freq = minFreq + x / dimensions.width * (maxFreq - minFreq);\n    setHoverPoint({\n      x,\n      y,\n      freq: Math.round(freq)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-xl p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-gray-800\",\n      children: \"Visualizaci\\xF3n del Espectro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-80 bg-gradient-to-b from-gray-50 to-white rounded overflow-hidden\",\n      onMouseMove: handleMouseMove,\n      onMouseLeave: () => setHoverPoint(null),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        viewBox: `0 0 ${dimensions.width} ${dimensions.height}`,\n        preserveAspectRatio: \"none\",\n        className: \"w-full h-full\",\n        children: [renderAxes(), renderNoiseFloor(), renderSignals(), hoverPoint && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: hoverPoint.x,\n            y1: \"0\",\n            x2: hoverPoint.x,\n            y2: dimensions.height - 50,\n            stroke: \"#888\",\n            strokeWidth: \"1\",\n            strokeDasharray: \"4,2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: hoverPoint.x,\n            cy: hoverPoint.y,\n            r: \"4\",\n            fill: \"#ff4757\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: hoverPoint.x + 10,\n            y: 20,\n            fill: \"#333\",\n            fontWeight: \"bold\",\n            children: [hoverPoint.freq, \" Hz\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(SpectrumGraph, \"vzDkEmQeKDJ+NcyXG8f2EJX8ea8=\");\n_c = SpectrumGraph;\nexport default SpectrumGraph;\nvar _c;\n$RefreshReg$(_c, \"SpectrumGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SpectrumGraph","signals","noiseData","_s","svgRef","dimensions","setDimensions","width","height","hoverPoint","setHoverPoint","handleResize","_svgRef$current","current","parentElement","clientWidth","window","addEventListener","removeEventListener","getFrequencyRange","length","minFreq","maxFreq","freqs","flatMap","s","fc","bw","Math","min","max","freqToX","freq","dbmToY","dbm","calculateSignalPoints","signal","points","startFreq","endFreq","i","x","center","spread","y","power","exp","pow","push","join","renderSignals","map","index","peakX","peakY","powerColor","halfBw","leftFreq","rightFreq","levelMinus3dB","levelMinus3dB_Y","xStart3dB","xEnd3dB","children","d","fill","stroke","strokeWidth","strokeOpacity","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","x1","y1","x2","y2","strokeDasharray","textAnchor","name","renderNoiseFloor","noiseY","totalNoise","random","renderAxes","toFixed","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","round","className","onMouseMove","onMouseLeave","ref","viewBox","preserveAspectRatio","cx","cy","r","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Universidad/7mo Semestre/Redes Inalambricas/project/src/components/SpectrumGraph.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst SpectrumGraph = ({ signals, noiseData }) => {\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 400 });\n  const [hoverPoint, setHoverPoint] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (svgRef.current?.parentElement) {\n        setDimensions({\n          width: svgRef.current.parentElement.clientWidth,\n          height: 400\n        });\n      }\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Calcular rango total del espectro basado en todas las señales\n  const getFrequencyRange = () => {\n    if (signals.length === 0) return { minFreq: 0, maxFreq: 2000 };\n\n    const freqs = signals.flatMap(s => [s.fc - s.bw / 2, s.fc + s.bw / 2]);\n    return {\n      minFreq: Math.min(...freqs),\n      maxFreq: Math.max(...freqs)\n    };\n  };\n\n  const { minFreq, maxFreq } = getFrequencyRange();\n\n  const freqToX = (freq) =>\n    ((freq - minFreq) / (maxFreq - minFreq)) * dimensions.width;\n\n  const dbmToY = (dbm) =>\n    dimensions.height - 50 - (dbm * 3); // Ajuste visual\n\n  const calculateSignalPoints = (signal) => {\n    const points = [];\n    const startFreq = signal.fc - signal.bw / 2;\n    const endFreq = signal.fc + signal.bw / 2;\n\n    for (let i = 0; i <= 100; i++) {\n      const freq = startFreq + (i / 100) * (endFreq - startFreq);\n      const x = freqToX(freq);\n      const center = signal.fc;\n      const spread = signal.bw / 4;\n      const y =\n        dbmToY(\n          signal.power *\n          Math.exp(-Math.pow((freq - center) / spread, 2)) // curva tipo gaussiana\n        );\n\n      points.push(`${x},${y}`);\n    }\n\n    return points.join(' ');\n  };\n\n  const renderSignals = () => {\n    return signals.map((signal, index) => {\n      const peakX = freqToX(signal.fc);\n      const peakY = dbmToY(signal.power);\n      const powerColor = `hsl(${index * 90}, 80%, 50%)`;\n\n      const halfBw = signal.bw / 2;\n      const leftFreq = signal.fc - halfBw;\n      const rightFreq = signal.fc + halfBw;\n\n      const levelMinus3dB = signal.power - 3;\n      const levelMinus3dB_Y = dbmToY(levelMinus3dB);\n\n      const xStart3dB = freqToX(leftFreq);\n      const xEnd3dB = freqToX(rightFreq);\n\n      return (\n        <g key={`signal-${index}`}>\n          {/* Curva de señal */}\n          <path\n            d={`M${calculateSignalPoints(signal)}`}\n            fill=\"none\"\n            stroke={powerColor}\n            strokeWidth=\"2\"\n            strokeOpacity=\"0.9\"\n          />\n\n          {/* Etiqueta de potencia en el eje Y */}\n          <text\n            x=\"5\"\n            y={peakY + 5}\n            fill={powerColor}\n            fontSize=\"12\"\n            fontWeight=\"bold\"\n          >\n            {signal.power} dBm\n          </text>\n\n          {/* Línea de caída de 3 dBm */}\n          <line\n            x1={xStart3dB}\n            y1={levelMinus3dB_Y}\n            x2={xEnd3dB}\n            y2={levelMinus3dB_Y}\n            stroke={powerColor}\n            strokeDasharray=\"4,2\"\n            strokeWidth=\"1.2\"\n          />\n          <text\n            x={xEnd3dB + 5}\n            y={levelMinus3dB_Y + 5}\n            fill={powerColor}\n            fontSize=\"11\"\n          >\n            -3 dBm\n          </text>\n\n          {/* Etiqueta de nombre bajo la curva */}\n          <text\n            x={peakX}\n            y={dimensions.height - 10}\n            textAnchor=\"middle\"\n            fill=\"#555\"\n            fontSize=\"11\"\n          >\n            {signal.name}\n          </text>\n        </g>\n      );\n    });\n  };\n\n\n  const renderNoiseFloor = () => {\n    if (!noiseData) return null;\n\n    const noiseY = dbmToY(noiseData.totalNoise);\n    const points = [];\n\n    for (let i = 0; i <= 100; i++) {\n      const x = (i / 100) * dimensions.width;\n      const y = noiseY + (Math.random() * 6 - 3); // leve variación\n      points.push(`${x},${y}`);\n    }\n\n    return (\n      <>\n        <path\n          d={`M${points.join(' ')}`}\n          fill=\"none\"\n          stroke=\"#999\"\n          strokeWidth=\"1.5\"\n          strokeOpacity=\"0.7\"\n          strokeDasharray=\"3,2\"\n        />\n        <text\n          x={10}\n          y={noiseY - 5}\n          fill=\"#999\"\n          fontSize=\"12\"\n        >\n          Ruido: {noiseData.totalNoise} dBm\n        </text>\n      </>\n    );\n  };\n\n  const renderAxes = () => {\n    return (\n      <>\n        {/* Eje X */}\n        <line\n          x1=\"0\"\n          y1={dimensions.height - 50}\n          x2={dimensions.width}\n          y2={dimensions.height - 50}\n          stroke=\"#333\"\n          strokeWidth=\"1\"\n        />\n        {/* Eje Y */}\n        <line\n          x1=\"50\"\n          y1=\"0\"\n          x2=\"50\"\n          y2={dimensions.height - 50}\n          stroke=\"#333\"\n          strokeWidth=\"1\"\n        />\n        {/* Etiquetas de frecuencia mínima y máxima */}\n        <text x=\"0\" y={dimensions.height - 30} fontSize=\"11\" fill=\"#444\">\n          {minFreq.toFixed(0)} Hz\n        </text>\n        <text x={dimensions.width - 40} y={dimensions.height - 30} fontSize=\"11\" fill=\"#444\">\n          {maxFreq.toFixed(0)} Hz\n        </text>\n      </>\n    );\n  };\n\n  const handleMouseMove = (e) => {\n    if (!svgRef.current) return;\n\n    const rect = svgRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    const freq = minFreq + (x / dimensions.width) * (maxFreq - minFreq);\n    setHoverPoint({ x, y, freq: Math.round(freq) });\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-xl p-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Visualización del Espectro</h2>\n      <div\n        className=\"relative w-full h-80 bg-gradient-to-b from-gray-50 to-white rounded overflow-hidden\"\n        onMouseMove={handleMouseMove}\n        onMouseLeave={() => setHoverPoint(null)}\n      >\n        <svg\n          ref={svgRef}\n          width={dimensions.width}\n          height={dimensions.height}\n          viewBox={`0 0 ${dimensions.width} ${dimensions.height}`}\n          preserveAspectRatio=\"none\"\n          className=\"w-full h-full\"\n        >\n          {renderAxes()}\n          {renderNoiseFloor()}\n          {renderSignals()}\n\n          {hoverPoint && (\n            <>\n              <line\n                x1={hoverPoint.x}\n                y1=\"0\"\n                x2={hoverPoint.x}\n                y2={dimensions.height - 50}\n                stroke=\"#888\"\n                strokeWidth=\"1\"\n                strokeDasharray=\"4,2\"\n              />\n              <circle\n                cx={hoverPoint.x}\n                cy={hoverPoint.y}\n                r=\"4\"\n                fill=\"#ff4757\"\n              />\n              <text\n                x={hoverPoint.x + 10}\n                y={20}\n                fill=\"#333\"\n                fontWeight=\"bold\"\n              >\n                {hoverPoint.freq} Hz\n              </text>\n            </>\n          )}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default SpectrumGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}