{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactProjects\\\\SpectraViz\\\\src\\\\components\\\\SignalInputForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Se define el estado inicial del formulario de entrada de señal, incluyendo potencia, ancho de banda, frecuencia central y nombre.\n// Esta ventana permite al usuario agregar señales al espectro, especificando sus características.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignalInputForm = ({\n  onAddSignal\n}) => {\n  _s();\n  const [signal, setSignal] = useState({\n    power: '',\n    bw: '',\n    fc: '',\n    name: ''\n  });\n  // Funcion para manejar el envio del formulario de entrada de señal\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddSignal({\n      ...signal,\n      power: parseFloat(signal.power),\n      bw: parseFloat(signal.bw),\n      fc: parseFloat(signal.fc)\n    });\n    setSignal({\n      power: '',\n      bw: '',\n      fc: '',\n      name: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-md p-4 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-3 text-gray-800\",\n      children: \"Agregar Se\\xF1al\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" // Campo de texto para el nombre de la señal\n          ,\n          value: signal.name // Enlazado al estado de nombre\n          ,\n          onChange: e => setSignal({\n            ...signal,\n            name: e.target.value\n          }) // Actualizacion de estado de nombre\n          ,\n          className: \"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Potencia (dBm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\" // Permitir decimales para la potencia\n          ,\n          value: signal.power // Enlazado al estado de potencia\n          ,\n          onChange: e => setSignal({\n            ...signal,\n            power: e.target.value\n          }) // Actualizacion de estado de potencia\n          ,\n          className: \"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Ancho de Banda (MHz)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: signal.bw // Enlazado al estado de ancho de banda\n          ,\n          onChange: e => setSignal({\n            ...signal,\n            bw: e.target.value\n          }) // Actualizacion de estado de ancho de banda\n          ,\n          className: \"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Frecuencia Central (MHz)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: signal.fc // Enlazado al estado de frecuencia central \n          ,\n          onChange: e => setSignal({\n            ...signal,\n            fc: e.target.value\n          }) // Actualizacion de estado de frecuencia central\n          ,\n          className: \"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        // Botón para enviar el formulario\n        type: \"submit\",\n        className: \"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors\",\n        children: \"Agregar Se\\xF1al\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(SignalInputForm, \"xojzlMY9t4NVfIrI9rRvbnfSm5c=\");\n_c = SignalInputForm;\nexport default SignalInputForm;\nvar _c;\n$RefreshReg$(_c, \"SignalInputForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignalInputForm","onAddSignal","_s","signal","setSignal","power","bw","fc","name","handleSubmit","e","preventDefault","parseFloat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","step","_c","$RefreshReg$"],"sources":["C:/ReactProjects/SpectraViz/src/components/SignalInputForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Se define el estado inicial del formulario de entrada de señal, incluyendo potencia, ancho de banda, frecuencia central y nombre.\r\n// Esta ventana permite al usuario agregar señales al espectro, especificando sus características.\r\nconst SignalInputForm = ({ onAddSignal }) => {\r\n  const [signal, setSignal] = useState({\r\n    power: '',\r\n    bw: '',\r\n    fc: '',\r\n    name: ''\r\n  });\r\n // Funcion para manejar el envio del formulario de entrada de señal\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAddSignal({\r\n      ...signal,\r\n      power: parseFloat(signal.power),\r\n      bw: parseFloat(signal.bw),\r\n      fc: parseFloat(signal.fc)\r\n    });\r\n    setSignal({ power: '', bw: '', fc: '', name: '' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-4 mb-4\">\r\n      <h2 className=\"text-lg font-semibold mb-3 text-gray-800\">Agregar Señal</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-3\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Nombre</label>\r\n          <input\r\n            type=\"text\" // Campo de texto para el nombre de la señal\r\n            value={signal.name} // Enlazado al estado de nombre\r\n            onChange={(e) => setSignal({...signal, name: e.target.value})} // Actualizacion de estado de nombre\r\n            className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            required \r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Potencia (dBm)</label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\" // Permitir decimales para la potencia\r\n            value={signal.power} // Enlazado al estado de potencia\r\n            onChange={(e) => setSignal({...signal, power: e.target.value})} // Actualizacion de estado de potencia\r\n            className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Ancho de Banda (MHz)</label>\r\n          <input\r\n            type=\"number\"\r\n            value={signal.bw} // Enlazado al estado de ancho de banda\r\n            onChange={(e) => setSignal({...signal, bw: e.target.value})} // Actualizacion de estado de ancho de banda\r\n            className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Frecuencia Central (MHz)</label>\r\n          <input\r\n            type=\"number\" \r\n            value={signal.fc}  // Enlazado al estado de frecuencia central \r\n            onChange={(e) => setSignal({...signal, fc: e.target.value})} // Actualizacion de estado de frecuencia central\r\n            className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            required\r\n          />\r\n        </div>\r\n        <button // Botón para enviar el formulario\r\n          type=\"submit\"\r\n          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors\"\r\n        >\r\n          Agregar Señal\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignalInputForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}