{"ast":null,"code":"import _objectSpread from\"C:/ReactProjects/project/SpectraViz/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';// Se define el estado inicial del formulario de entrada de señal, incluyendo potencia, ancho de banda, frecuencia central y nombre.\n// Esta ventana permite al usuario agregar señales al espectro, especificando sus características.\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignalInputForm=_ref=>{let{onAddSignal}=_ref;const[signal,setSignal]=useState({power:'',bw:'',fc:'',name:''});// Funcion para manejar el envio del formulario de entrada de señal\nconst handleSubmit=e=>{e.preventDefault();onAddSignal(_objectSpread(_objectSpread({},signal),{},{power:parseFloat(signal.power),bw:parseFloat(signal.bw),fc:parseFloat(signal.fc)}));setSignal({power:'',bw:'',fc:'',name:''});};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-4 mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold mb-3 text-gray-800\",children:\"Agregar Se\\xF1al\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Nombre\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\"// Campo de texto para el nombre de la señal\n,value:signal.name// Enlazado al estado de nombre\n,onChange:e=>setSignal(_objectSpread(_objectSpread({},signal),{},{name:e.target.value}))// Actualizacion de estado de nombre\n,className:\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Potencia (dBm)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\"// Permitir decimales para la potencia\n,value:signal.power// Enlazado al estado de potencia\n,onChange:e=>setSignal(_objectSpread(_objectSpread({},signal),{},{power:e.target.value}))// Actualizacion de estado de potencia\n,className:\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Ancho de Banda (MHz)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:signal.bw// Enlazado al estado de ancho de banda\n,onChange:e=>setSignal(_objectSpread(_objectSpread({},signal),{},{bw:e.target.value}))// Actualizacion de estado de ancho de banda\n,className:\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700\",children:\"Frecuencia Central (MHz)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:signal.fc// Enlazado al estado de frecuencia central \n,onChange:e=>setSignal(_objectSpread(_objectSpread({},signal),{},{fc:e.target.value}))// Actualizacion de estado de frecuencia central\n,className:\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{// Botón para enviar el formulario\ntype:\"submit\",className:\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors\",children:\"Agregar Se\\xF1al\"})]})]});};export default SignalInputForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","SignalInputForm","_ref","onAddSignal","signal","setSignal","power","bw","fc","name","handleSubmit","e","preventDefault","_objectSpread","parseFloat","className","children","onSubmit","type","value","onChange","target","required","step"],"sources":["C:/ReactProjects/project/SpectraViz/src/components/SignalInputForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Se define el estado inicial del formulario de entrada de señal, incluyendo potencia, ancho de banda, frecuencia central y nombre.\r\n// Esta ventana permite al usuario agregar señales al espectro, especificando sus características.\r\nconst SignalInputForm = ({ onAddSignal }) => {\r\n  const [signal, setSignal] = useState({\r\n    power: '',\r\n    bw: '',\r\n    fc: '',\r\n    name: ''\r\n  });\r\n // Funcion para manejar el envio del formulario de entrada de señal\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAddSignal({\r\n      ...signal,\r\n      power: parseFloat(signal.power),\r\n      bw: parseFloat(signal.bw),\r\n      fc: parseFloat(signal.fc)\r\n    });\r\n    setSignal({ power: '', bw: '', fc: '', name: '' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-4 mb-4\">\r\n      <h2 className=\"text-lg font-semibold mb-3 text-gray-800\">Agregar Señal</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-3\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Nombre</label>\r\n          <input\r\n            type=\"text\" // Campo de texto para el nombre de la señal\r\n            value={signal.name} // Enlazado al estado de nombre\r\n            onChange={(e) => setSignal({...signal, name: e.target.value})} // Actualizacion de estado de nombre\r\n            className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            required \r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Potencia (dBm)</label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\" // Permitir decimales para la potencia\r\n            value={signal.power} // Enlazado al estado de potencia\r\n            onChange={(e) => setSignal({...signal, power: e.target.value})} // Actualizacion de estado de potencia\r\n            className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Ancho de Banda (MHz)</label>\r\n          <input\r\n            type=\"number\"\r\n            value={signal.bw} // Enlazado al estado de ancho de banda\r\n            onChange={(e) => setSignal({...signal, bw: e.target.value})} // Actualizacion de estado de ancho de banda\r\n            className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700\">Frecuencia Central (MHz)</label>\r\n          <input\r\n            type=\"number\" \r\n            value={signal.fc}  // Enlazado al estado de frecuencia central \r\n            onChange={(e) => setSignal({...signal, fc: e.target.value})} // Actualizacion de estado de frecuencia central\r\n            className=\"w-full mt-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            required\r\n          />\r\n        </div>\r\n        <button // Botón para enviar el formulario\r\n          type=\"submit\"\r\n          className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors\"\r\n        >\r\n          Agregar Señal\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignalInputForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}