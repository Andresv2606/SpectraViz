{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Universidad\\\\7mo Semestre\\\\Redes Inalambricas\\\\project\\\\src\\\\components\\\\SpectrumGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpectrumGraph = ({\n  signals,\n  noiseData\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 400\n  });\n  const [hoverPoint, setHoverPoint] = useState(null);\n  useEffect(() => {\n    const handleResize = () => {\n      var _svgRef$current;\n      if ((_svgRef$current = svgRef.current) !== null && _svgRef$current !== void 0 && _svgRef$current.parentElement) {\n        setDimensions({\n          width: svgRef.current.parentElement.clientWidth,\n          height: 400\n        });\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const allFrequencies = signals.map(s => s.fc);\n  const allBandwidths = signals.map(s => s.bw);\n  const maxFc = Math.max(...allFrequencies);\n  const minFc = Math.min(...allFrequencies);\n  const maxBw = Math.max(...allBandwidths);\n  const totalRange = maxBw * 2;\n  const margin = totalRange * 0.5;\n  const freqMin = minFc - margin;\n  const freqMax = maxFc + margin;\n  const freqRange = freqMax - freqMin;\n  const dbmRange = 140;\n  const freqToX = freq => (freq - freqMin) / freqRange * dimensions.width;\n  const dbmToY = dbm => (70 - dbm) / dbmRange * (dimensions.height - 50);\n  const calculateSignalPoints = signal => {\n    const points = [];\n    const centerFreq = signal.fc;\n    const halfBw = signal.bw / 2;\n    const startFreq = centerFreq - halfBw - 5; // extend before start for fall\n    const endFreq = centerFreq + halfBw + 5; // extend after end for fall\n\n    for (let i = 0; i <= 100; i++) {\n      const freq = startFreq + i / 100 * (endFreq - startFreq);\n      const x = freqToX(freq);\n      let power;\n      if (freq < centerFreq - halfBw || freq > centerFreq + halfBw) {\n        power = -70; // simulate fall outside bandwidth\n      } else {\n        power = -Math.abs(signal.power);\n      }\n      const y = dbmToY(power);\n      points.push(`${x},${y}`);\n    }\n    return points.join(' ');\n  };\n  const renderSignals = () => {\n    return signals.map((signal, index) => {\n      const xPeak = freqToX(signal.fc);\n      const yPeak = dbmToY(-Math.abs(signal.power));\n      const yFall = dbmToY(-Math.abs(signal.power - 3));\n      const xStart = freqToX(signal.fc - signal.bw / 2);\n      const xEnd = freqToX(signal.fc + signal.bw / 2);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"signal-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: calculateSignalPoints(signal),\n          fill: \"none\",\n          stroke: `hsl(${index * 120}, 80%, 50%)`,\n          strokeWidth: \"2\",\n          strokeOpacity: \"0.8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: xPeak,\n          y: yPeak - 10,\n          textAnchor: \"middle\",\n          fill: `hsl(${index * 120}, 80%, 50%)`,\n          fontWeight: \"bold\",\n          children: `Pico: -${Math.abs(signal.power)} dBm`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: xStart,\n          y1: yFall,\n          x2: xEnd,\n          y2: yFall,\n          stroke: \"gray\",\n          strokeDasharray: \"4,2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: xPeak,\n          y: yFall - 5,\n          textAnchor: \"middle\",\n          fill: \"gray\",\n          fontSize: \"10\",\n          children: \"-3 dBm ca\\xEDda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: xStart,\n          y: dimensions.height - 35,\n          textAnchor: \"middle\",\n          fill: \"black\",\n          fontSize: \"10\",\n          children: `${Math.round(signal.fc - signal.bw / 2)} Hz`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: xEnd,\n          y: dimensions.height - 35,\n          textAnchor: \"middle\",\n          fill: \"black\",\n          fontSize: \"10\",\n          children: `${Math.round(signal.fc + signal.bw / 2)} Hz`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: xPeak,\n          y: dimensions.height - 20,\n          textAnchor: \"middle\",\n          fill: \"black\",\n          fontSize: \"10\",\n          fontWeight: \"bold\",\n          children: `${signal.fc} Hz`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, `signal-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderNoiseFloor = () => {\n    if (!noiseData) return null;\n    const baseY = dbmToY(-Math.abs(noiseData.totalNoise));\n    const points = [];\n    for (let i = 0; i <= 100; i++) {\n      const x = i / 100 * dimensions.width;\n      const y = baseY + (Math.random() * 10 - 5);\n      points.push(`${x},${y}`);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M${points.join(' ')}`,\n        fill: \"none\",\n        stroke: \"#666\",\n        strokeWidth: \"1.5\",\n        strokeOpacity: \"0.7\",\n        strokeDasharray: \"2,2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"0\",\n        y1: baseY,\n        x2: dimensions.width,\n        y2: baseY,\n        stroke: \"#aaa\",\n        strokeDasharray: \"3,2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: 5,\n        y: baseY - 5,\n        fill: \"#666\",\n        fontSize: \"10\",\n        children: `Ruido: -${Math.abs(noiseData.totalNoise)} dBm`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  const renderAxes = () => {\n    const lines = [];\n    for (let i = -70; i <= 70; i += 10) {\n      const y = dbmToY(i);\n      lines.push(/*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: y,\n          x2: dimensions.width,\n          y2: y,\n          stroke: \"#eee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"0\",\n          y: y - 2,\n          fontSize: \"10\",\n          fill: \"#555\",\n          children: [i, \" dBm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, `y-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this));\n    }\n    const xCenter = freqToX((freqMax + freqMin) / 2);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"0\",\n        y1: dbmToY(0),\n        x2: dimensions.width,\n        y2: dbmToY(0),\n        stroke: \"#000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: xCenter,\n        y1: \"0\",\n        x2: xCenter,\n        y2: dimensions.height - 50,\n        stroke: \"#000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), lines]\n    }, void 0, true);\n  };\n  const handleMouseMove = e => {\n    if (!svgRef.current) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const freq = Math.round(x / dimensions.width * freqRange + freqMin);\n    setHoverPoint({\n      x,\n      y,\n      freq\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-xl p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-gray-800\",\n      children: \"Visualizaci\\xF3n del Espectro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-80 bg-gradient-to-b from-gray-50 to-white rounded overflow-hidden\",\n      onMouseMove: handleMouseMove,\n      onMouseLeave: () => setHoverPoint(null),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        viewBox: `0 0 ${dimensions.width} ${dimensions.height}`,\n        preserveAspectRatio: \"none\",\n        className: \"w-full h-full\",\n        children: [renderAxes(), renderNoiseFloor(), renderSignals(), hoverPoint && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: hoverPoint.x,\n            y1: \"0\",\n            x2: hoverPoint.x,\n            y2: dimensions.height - 50,\n            stroke: \"#666\",\n            strokeWidth: \"1\",\n            strokeDasharray: \"4,2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: hoverPoint.x,\n            cy: hoverPoint.y,\n            r: \"4\",\n            fill: \"#ff4757\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: hoverPoint.x + 10,\n            y: 20,\n            fill: \"#333\",\n            fontWeight: \"bold\",\n            children: [hoverPoint.freq, \" Hz\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(SpectrumGraph, \"vzDkEmQeKDJ+NcyXG8f2EJX8ea8=\");\n_c = SpectrumGraph;\nexport default SpectrumGraph;\nvar _c;\n$RefreshReg$(_c, \"SpectrumGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SpectrumGraph","signals","noiseData","_s","svgRef","dimensions","setDimensions","width","height","hoverPoint","setHoverPoint","handleResize","_svgRef$current","current","parentElement","clientWidth","window","addEventListener","removeEventListener","allFrequencies","map","s","fc","allBandwidths","bw","maxFc","Math","max","minFc","min","maxBw","totalRange","margin","freqMin","freqMax","freqRange","dbmRange","freqToX","freq","dbmToY","dbm","calculateSignalPoints","signal","points","centerFreq","halfBw","startFreq","endFreq","i","x","power","abs","y","push","join","renderSignals","index","xPeak","yPeak","yFall","xStart","xEnd","className","children","fill","stroke","strokeWidth","strokeOpacity","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","fontWeight","x1","y1","x2","y2","strokeDasharray","fontSize","round","renderNoiseFloor","baseY","totalNoise","random","d","renderAxes","lines","xCenter","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","onMouseMove","onMouseLeave","ref","viewBox","preserveAspectRatio","cx","cy","r","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Universidad/7mo Semestre/Redes Inalambricas/project/src/components/SpectrumGraph.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst SpectrumGraph = ({ signals, noiseData }) => {\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 400 });\n  const [hoverPoint, setHoverPoint] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (svgRef.current?.parentElement) {\n        setDimensions({\n          width: svgRef.current.parentElement.clientWidth,\n          height: 400,\n        });\n      }\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const allFrequencies = signals.map(s => s.fc);\n  const allBandwidths = signals.map(s => s.bw);\n  const maxFc = Math.max(...allFrequencies);\n  const minFc = Math.min(...allFrequencies);\n  const maxBw = Math.max(...allBandwidths);\n\n  const totalRange = maxBw * 2;\n  const margin = totalRange * 0.5;\n  const freqMin = minFc - margin;\n  const freqMax = maxFc + margin;\n  const freqRange = freqMax - freqMin;\n  const dbmRange = 140;\n\n  const freqToX = (freq) => ((freq - freqMin) / freqRange) * dimensions.width;\n  const dbmToY = (dbm) => ((70 - dbm) / dbmRange) * (dimensions.height - 50);\n\n  const calculateSignalPoints = (signal) => {\n    const points = [];\n    const centerFreq = signal.fc;\n    const halfBw = signal.bw / 2;\n    const startFreq = centerFreq - halfBw - 5; // extend before start for fall\n    const endFreq = centerFreq + halfBw + 5;   // extend after end for fall\n\n    for (let i = 0; i <= 100; i++) {\n      const freq = startFreq + (i / 100) * (endFreq - startFreq);\n      const x = freqToX(freq);\n      let power;\n      if (freq < centerFreq - halfBw || freq > centerFreq + halfBw) {\n        power = -70; // simulate fall outside bandwidth\n      } else {\n        power = -Math.abs(signal.power);\n      }\n      const y = dbmToY(power);\n      points.push(`${x},${y}`);\n    }\n\n    return points.join(' ');\n  };\n\n  const renderSignals = () => {\n    return signals.map((signal, index) => {\n      const xPeak = freqToX(signal.fc);\n      const yPeak = dbmToY(-Math.abs(signal.power));\n      const yFall = dbmToY(-Math.abs(signal.power - 3));\n      const xStart = freqToX(signal.fc - signal.bw / 2);\n      const xEnd = freqToX(signal.fc + signal.bw / 2);\n\n      return (\n        <g key={`signal-${index}`} className=\"signal-group\">\n          <polyline\n            points={calculateSignalPoints(signal)}\n            fill=\"none\"\n            stroke={`hsl(${index * 120}, 80%, 50%)`}\n            strokeWidth=\"2\"\n            strokeOpacity=\"0.8\"\n          />\n          <text\n            x={xPeak}\n            y={yPeak - 10}\n            textAnchor=\"middle\"\n            fill={`hsl(${index * 120}, 80%, 50%)`}\n            fontWeight=\"bold\"\n          >\n            {`Pico: -${Math.abs(signal.power)} dBm`}\n          </text>\n          <line\n            x1={xStart}\n            y1={yFall}\n            x2={xEnd}\n            y2={yFall}\n            stroke=\"gray\"\n            strokeDasharray=\"4,2\"\n          />\n          <text\n            x={xPeak}\n            y={yFall - 5}\n            textAnchor=\"middle\"\n            fill=\"gray\"\n            fontSize=\"10\"\n          >\n            -3 dBm caída\n          </text>\n          <text\n            x={xStart}\n            y={dimensions.height - 35}\n            textAnchor=\"middle\"\n            fill=\"black\"\n            fontSize=\"10\"\n          >\n            {`${Math.round(signal.fc - signal.bw / 2)} Hz`}\n          </text>\n          <text\n            x={xEnd}\n            y={dimensions.height - 35}\n            textAnchor=\"middle\"\n            fill=\"black\"\n            fontSize=\"10\"\n          >\n            {`${Math.round(signal.fc + signal.bw / 2)} Hz`}\n          </text>\n          <text\n            x={xPeak}\n            y={dimensions.height - 20}\n            textAnchor=\"middle\"\n            fill=\"black\"\n            fontSize=\"10\"\n            fontWeight=\"bold\"\n          >\n            {`${signal.fc} Hz`}\n          </text>\n        </g>\n      );\n    });\n  };\n\n  const renderNoiseFloor = () => {\n    if (!noiseData) return null;\n    const baseY = dbmToY(-Math.abs(noiseData.totalNoise));\n    const points = [];\n\n    for (let i = 0; i <= 100; i++) {\n      const x = (i / 100) * dimensions.width;\n      const y = baseY + (Math.random() * 10 - 5);\n      points.push(`${x},${y}`);\n    }\n\n    return (\n      <>\n        <path\n          d={`M${points.join(' ')}`}\n          fill=\"none\"\n          stroke=\"#666\"\n          strokeWidth=\"1.5\"\n          strokeOpacity=\"0.7\"\n          strokeDasharray=\"2,2\"\n        />\n        <line\n          x1=\"0\"\n          y1={baseY}\n          x2={dimensions.width}\n          y2={baseY}\n          stroke=\"#aaa\"\n          strokeDasharray=\"3,2\"\n        />\n        <text\n          x={5}\n          y={baseY - 5}\n          fill=\"#666\"\n          fontSize=\"10\"\n        >\n          {`Ruido: -${Math.abs(noiseData.totalNoise)} dBm`}\n        </text>\n      </>\n    );\n  };\n\n  const renderAxes = () => {\n    const lines = [];\n    for (let i = -70; i <= 70; i += 10) {\n      const y = dbmToY(i);\n      lines.push(\n        <g key={`y-${i}`}>\n          <line x1=\"0\" y1={y} x2={dimensions.width} y2={y} stroke=\"#eee\" />\n          <text x=\"0\" y={y - 2} fontSize=\"10\" fill=\"#555\">{i} dBm</text>\n        </g>\n      );\n    }\n\n    const xCenter = freqToX((freqMax + freqMin) / 2);\n\n    return (\n      <>\n        <line\n          x1=\"0\"\n          y1={dbmToY(0)}\n          x2={dimensions.width}\n          y2={dbmToY(0)}\n          stroke=\"#000\"\n        />\n        <line\n          x1={xCenter}\n          y1=\"0\"\n          x2={xCenter}\n          y2={dimensions.height - 50}\n          stroke=\"#000\"\n        />\n        {lines}\n      </>\n    );\n  };\n\n  const handleMouseMove = (e) => {\n    if (!svgRef.current) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const freq = Math.round((x / dimensions.width) * freqRange + freqMin);\n    setHoverPoint({ x, y, freq });\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-xl p-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Visualización del Espectro</h2>\n      <div\n        className=\"relative w-full h-80 bg-gradient-to-b from-gray-50 to-white rounded overflow-hidden\"\n        onMouseMove={handleMouseMove}\n        onMouseLeave={() => setHoverPoint(null)}\n      >\n        <svg\n          ref={svgRef}\n          width={dimensions.width}\n          height={dimensions.height}\n          viewBox={`0 0 ${dimensions.width} ${dimensions.height}`}\n          preserveAspectRatio=\"none\"\n          className=\"w-full h-full\"\n        >\n          {renderAxes()}\n          {renderNoiseFloor()}\n          {renderSignals()}\n\n          {hoverPoint && (\n            <>\n              <line\n                x1={hoverPoint.x}\n                y1=\"0\"\n                x2={hoverPoint.x}\n                y2={dimensions.height - 50}\n                stroke=\"#666\"\n                strokeWidth=\"1\"\n                strokeDasharray=\"4,2\"\n              />\n              <circle cx={hoverPoint.x} cy={hoverPoint.y} r=\"4\" fill=\"#ff4757\" />\n              <text x={hoverPoint.x + 10} y={20} fill=\"#333\" fontWeight=\"bold\">\n                {hoverPoint.freq} Hz\n              </text>\n            </>\n          )}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default SpectrumGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}