{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Universidad\\\\7mo Semestre\\\\Redes Inalambricas\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SpectrumHeader from './components/SpectrumHeader';\nimport SignalInputForm from './components/SignalInputForm';\nimport NoiseSettings from './components/NoiseSettings';\nimport SpectrumGraph from './components/SpectrumGraph';\nimport MeasurementsPanel from './components/MeasurementsPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [signals, setSignals] = useState([]);\n  const [noiseData, setNoiseData] = useState(null);\n  const [measurements, setMeasurements] = useState([]);\n  const handleAddSignal = signal => {\n    setSignals([...signals, signal]);\n    // Actualizar mediciones cuando se agrega una nueva señal\n    updateMeasurements([...signals, signal], noiseData);\n  };\n  const handleNoiseCalculate = noise => {\n    // Calcular el ruido térmico (kTB)\n    const k = 1.380649e-23; // Constante de Boltzmann\n    const thermalNoise = 10 * Math.log10(k * noise.temperature * noise.bw) + 30; // Convertir a dBm\n\n    // Considerar el ruido del sistema si está presente\n    const totalNoise = noise.systemNoise ? 10 * Math.log10(Math.pow(10, thermalNoise / 10) + Math.pow(10, noise.systemNoise / 10)) : thermalNoise;\n    setNoiseData({\n      thermalNoise,\n      systemNoise: noise.systemNoise,\n      totalNoise,\n      bw: noise.bw\n    });\n\n    // Actualizar mediciones con el nuevo cálculo de ruido\n    updateMeasurements(signals, {\n      thermalNoise,\n      systemNoise: noise.systemNoise,\n      totalNoise,\n      bw: noise.bw\n    });\n  };\n  const updateMeasurements = (currentSignals, currentNoise) => {\n    if (!currentNoise || currentSignals.length === 0) return;\n    const newMeasurements = [];\n\n    // Agregar información de ruido\n    newMeasurements.push({\n      label: 'Ruido Térmico',\n      value: `${currentNoise.thermalNoise.toFixed(2)} dBm`\n    });\n    if (currentNoise.systemNoise) {\n      newMeasurements.push({\n        label: 'Ruido del Sistema',\n        value: `${currentNoise.systemNoise.toFixed(2)} dBm`\n      });\n    }\n    newMeasurements.push({\n      label: 'Ruido Total',\n      value: `${currentNoise.totalNoise.toFixed(2)} dBm`\n    });\n\n    // Calcular SNR para cada señal\n    currentSignals.forEach((signal, index) => {\n      const snr = signal.power - currentNoise.totalNoise;\n      newMeasurements.push({\n        label: `SNR Señal ${index + 1} (${signal.name || 'Sin nombre'})`,\n        value: `${snr.toFixed(2)} dB`\n      });\n    });\n    setMeasurements(newMeasurements);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(SpectrumHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1 space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(SignalInputForm, {\n            onAddSignal: handleAddSignal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NoiseSettings, {\n            onNoiseCalculate: handleNoiseCalculate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MeasurementsPanel, {\n            measurements: measurements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-2\",\n          children: /*#__PURE__*/_jsxDEV(SpectrumGraph, {\n            signals: signals,\n            noiseData: noiseData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FNd2SGemoF5O8/UtO/2gKUKLzq8=\");\n_c = App;\nexport default App;\n\n// DONE\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SpectrumHeader","SignalInputForm","NoiseSettings","SpectrumGraph","MeasurementsPanel","jsxDEV","_jsxDEV","App","_s","signals","setSignals","noiseData","setNoiseData","measurements","setMeasurements","handleAddSignal","signal","updateMeasurements","handleNoiseCalculate","noise","k","thermalNoise","Math","log10","temperature","bw","totalNoise","systemNoise","pow","currentSignals","currentNoise","length","newMeasurements","push","label","value","toFixed","forEach","index","snr","power","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddSignal","onNoiseCalculate","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Universidad/7mo Semestre/Redes Inalambricas/project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SpectrumHeader from './components/SpectrumHeader';\nimport SignalInputForm from './components/SignalInputForm';\nimport NoiseSettings from './components/NoiseSettings';\nimport SpectrumGraph from './components/SpectrumGraph';\nimport MeasurementsPanel from './components/MeasurementsPanel';\n\nfunction App() {\n  const [signals, setSignals] = useState([]);\n  const [noiseData, setNoiseData] = useState(null);\n  const [measurements, setMeasurements] = useState([]);\n\n  const handleAddSignal = (signal) => {\n    setSignals([...signals, signal]);\n    // Actualizar mediciones cuando se agrega una nueva señal\n    updateMeasurements([...signals, signal], noiseData);\n  };\n\n  const handleNoiseCalculate = (noise) => {\n    // Calcular el ruido térmico (kTB)\n    const k = 1.380649e-23; // Constante de Boltzmann\n    const thermalNoise = 10 * Math.log10(k * noise.temperature * noise.bw) + 30; // Convertir a dBm\n    \n    // Considerar el ruido del sistema si está presente\n    const totalNoise = noise.systemNoise \n      ? 10 * Math.log10(Math.pow(10, thermalNoise/10) + Math.pow(10, noise.systemNoise/10))\n      : thermalNoise;\n\n    setNoiseData({\n      thermalNoise,\n      systemNoise: noise.systemNoise,\n      totalNoise,\n      bw: noise.bw\n    });\n    \n    // Actualizar mediciones con el nuevo cálculo de ruido\n    updateMeasurements(signals, {\n      thermalNoise,\n      systemNoise: noise.systemNoise,\n      totalNoise,\n      bw: noise.bw\n    });\n  };\n\n  const updateMeasurements = (currentSignals, currentNoise) => {\n    if (!currentNoise || currentSignals.length === 0) return;\n\n    const newMeasurements = [];\n    \n    // Agregar información de ruido\n    newMeasurements.push({\n      label: 'Ruido Térmico',\n      value: `${currentNoise.thermalNoise.toFixed(2)} dBm`\n    });\n\n    if (currentNoise.systemNoise) {\n      newMeasurements.push({\n        label: 'Ruido del Sistema',\n        value: `${currentNoise.systemNoise.toFixed(2)} dBm`\n      });\n    }\n\n    newMeasurements.push({\n      label: 'Ruido Total',\n      value: `${currentNoise.totalNoise.toFixed(2)} dBm`\n    });\n\n    // Calcular SNR para cada señal\n    currentSignals.forEach((signal, index) => {\n      const snr = signal.power - currentNoise.totalNoise;\n      newMeasurements.push({\n        label: `SNR Señal ${index + 1} (${signal.name || 'Sin nombre'})`,\n        value: `${snr.toFixed(2)} dB`\n      });\n    });\n\n    setMeasurements(newMeasurements);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <SpectrumHeader />\n      <div className=\"container mx-auto p-4\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n          <div className=\"lg:col-span-1 space-y-4\">\n            <SignalInputForm onAddSignal={handleAddSignal} />\n            <NoiseSettings onNoiseCalculate={handleNoiseCalculate} />\n            <MeasurementsPanel measurements={measurements} />\n          </div>\n          <div className=\"lg:col-span-2\">\n            <SpectrumGraph signals={signals} noiseData={noiseData} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// DONE"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}