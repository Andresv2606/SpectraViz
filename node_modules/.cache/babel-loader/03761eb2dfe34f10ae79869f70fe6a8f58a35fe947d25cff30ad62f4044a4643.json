{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Universidad\\\\7mo Semestre\\\\Redes Inalambricas\\\\project\\\\src\\\\components\\\\SpectrumGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpectrumGraph = ({\n  signals,\n  noiseData\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 400\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      var _svgRef$current;\n      if ((_svgRef$current = svgRef.current) !== null && _svgRef$current !== void 0 && _svgRef$current.parentElement) {\n        setDimensions({\n          width: svgRef.current.parentElement.clientWidth,\n          height: 400\n        });\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const freqMin = Math.min(...signals.map(s => s.fc - s.bw / 2)) - 10;\n  const freqMax = Math.max(...signals.map(s => s.fc + s.bw / 2)) + 10;\n  const powerMin = -120;\n  const powerMax = 0;\n  const mapFreqToX = freq => (freq - freqMin) / (freqMax - freqMin) * dimensions.width;\n  const mapPowerToY = power => (powerMax - power) / (powerMax - powerMin) * (dimensions.height - 50);\n  const calculateSignalPath = signal => {\n    const points = [];\n    const startFreq = signal.fc - signal.bw / 2;\n    const endFreq = signal.fc + signal.bw / 2;\n    for (let i = 0; i <= 100; i++) {\n      const freq = startFreq + i / 100 * (endFreq - startFreq);\n      const x = mapFreqToX(freq);\n\n      // Simulación tipo campana (Gaussiana invertida)\n      const sigma = signal.bw / 2 * 0.5;\n      const power = signal.power * Math.exp(-Math.pow((freq - signal.fc) / sigma, 2));\n      const y = mapPowerToY(power);\n      points.push(`${x},${y}`);\n    }\n    return points.join(' ');\n  };\n  const renderSignals = () => {\n    return signals.map((signal, index) => {\n      const peakX = mapFreqToX(signal.fc);\n      const peakY = mapPowerToY(signal.power);\n      const minus3dB = signal.power - 3;\n      const minus3dBY = mapPowerToY(minus3dB);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: `M${calculateSignalPath(signal)}`,\n          fill: \"none\",\n          stroke: `hsl(${index * 100}, 80%, 45%)`,\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: peakX,\n          y: peakY - 5,\n          textAnchor: \"middle\",\n          fill: \"#000\",\n          fontSize: \"12\",\n          fontWeight: \"bold\",\n          children: [signal.power, \" dBm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: mapFreqToX(signal.fc - signal.bw / 2),\n          x2: mapFreqToX(signal.fc + signal.bw / 2),\n          y1: minus3dBY,\n          y2: minus3dBY,\n          stroke: \"#999\",\n          strokeDasharray: \"4,2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: peakX,\n          y: dimensions.height - 10,\n          textAnchor: \"middle\",\n          fill: `hsl(${index * 100}, 80%, 45%)`,\n          children: signal.name || `Señal ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, `signal-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderAxes = () => {\n    const ySteps = 6;\n    const xSteps = 6;\n    const xAxis = [];\n    const yAxis = [];\n\n    // Eje X (frecuencia)\n    for (let i = 0; i <= xSteps; i++) {\n      const freq = freqMin + i / xSteps * (freqMax - freqMin);\n      const x = mapFreqToX(freq);\n      xAxis.push(/*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: dimensions.height - 30,\n        fontSize: \"10\",\n        textAnchor: \"middle\",\n        children: [freq.toFixed(0), \" Hz\"]\n      }, `x-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this));\n    }\n\n    // Eje Y (dBm)\n    for (let i = 0; i <= ySteps; i++) {\n      const power = powerMax - i / ySteps * (powerMax - powerMin);\n      const y = mapPowerToY(power);\n      yAxis.push(/*#__PURE__*/_jsxDEV(\"text\", {\n        x: 5,\n        y: y + 4,\n        fontSize: \"10\",\n        children: [power.toFixed(0), \" dBm\"]\n      }, `y-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: mapFreqToX(freqMin),\n        y1: mapPowerToY(0),\n        x2: mapFreqToX(freqMax),\n        y2: mapPowerToY(0),\n        stroke: \"#333\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: 50,\n        y1: 0,\n        x2: 50,\n        y2: dimensions.height - 50,\n        stroke: \"#333\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), xAxis, yAxis]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-xl p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-gray-800\",\n      children: \"Visualizaci\\xF3n del Espectro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-80 bg-gradient-to-b from-gray-50 to-white rounded overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        viewBox: `0 0 ${dimensions.width} ${dimensions.height}`,\n        preserveAspectRatio: \"none\",\n        className: \"w-full h-full\",\n        children: [renderAxes(), renderSignals()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(SpectrumGraph, \"ktBA07cSqRkEQvDjBOSIuQymh7I=\");\n_c = SpectrumGraph;\nexport default SpectrumGraph;\nvar _c;\n$RefreshReg$(_c, \"SpectrumGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SpectrumGraph","signals","noiseData","_s","svgRef","dimensions","setDimensions","width","height","handleResize","_svgRef$current","current","parentElement","clientWidth","window","addEventListener","removeEventListener","freqMin","Math","min","map","s","fc","bw","freqMax","max","powerMin","powerMax","mapFreqToX","freq","mapPowerToY","power","calculateSignalPath","signal","points","startFreq","endFreq","i","x","sigma","exp","pow","y","push","join","renderSignals","index","peakX","peakY","minus3dB","minus3dBY","children","d","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","fontSize","fontWeight","x1","x2","y1","y2","strokeDasharray","name","renderAxes","ySteps","xSteps","xAxis","yAxis","toFixed","className","ref","viewBox","preserveAspectRatio","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Universidad/7mo Semestre/Redes Inalambricas/project/src/components/SpectrumGraph.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst SpectrumGraph = ({ signals, noiseData }) => {\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 400 });\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (svgRef.current?.parentElement) {\n        setDimensions({\n          width: svgRef.current.parentElement.clientWidth,\n          height: 400\n        });\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const freqMin = Math.min(...signals.map(s => s.fc - s.bw / 2)) - 10;\n  const freqMax = Math.max(...signals.map(s => s.fc + s.bw / 2)) + 10;\n  const powerMin = -120;\n  const powerMax = 0;\n\n  const mapFreqToX = (freq) =>\n    ((freq - freqMin) / (freqMax - freqMin)) * dimensions.width;\n\n  const mapPowerToY = (power) =>\n    ((powerMax - power) / (powerMax - powerMin)) * (dimensions.height - 50);\n\n  const calculateSignalPath = (signal) => {\n    const points = [];\n    const startFreq = signal.fc - signal.bw / 2;\n    const endFreq = signal.fc + signal.bw / 2;\n\n    for (let i = 0; i <= 100; i++) {\n      const freq = startFreq + (i / 100) * (endFreq - startFreq);\n      const x = mapFreqToX(freq);\n\n      // Simulación tipo campana (Gaussiana invertida)\n      const sigma = (signal.bw / 2) * 0.5;\n      const power = signal.power * Math.exp(-Math.pow((freq - signal.fc) / sigma, 2));\n      const y = mapPowerToY(power);\n\n      points.push(`${x},${y}`);\n    }\n\n    return points.join(' ');\n  };\n\n  const renderSignals = () => {\n    return signals.map((signal, index) => {\n      const peakX = mapFreqToX(signal.fc);\n      const peakY = mapPowerToY(signal.power);\n      const minus3dB = signal.power - 3;\n      const minus3dBY = mapPowerToY(minus3dB);\n\n      return (\n        <g key={`signal-${index}`}>\n          {/* Curva de la señal */}\n          <path\n            d={`M${calculateSignalPath(signal)}`}\n            fill=\"none\"\n            stroke={`hsl(${index * 100}, 80%, 45%)`}\n            strokeWidth=\"2\"\n          />\n\n          {/* Etiqueta del pico */}\n          <text\n            x={peakX}\n            y={peakY - 5}\n            textAnchor=\"middle\"\n            fill=\"#000\"\n            fontSize=\"12\"\n            fontWeight=\"bold\"\n          >\n            {signal.power} dBm\n          </text>\n\n          {/* Línea -3 dBm */}\n          <line\n            x1={mapFreqToX(signal.fc - signal.bw / 2)}\n            x2={mapFreqToX(signal.fc + signal.bw / 2)}\n            y1={minus3dBY}\n            y2={minus3dBY}\n            stroke=\"#999\"\n            strokeDasharray=\"4,2\"\n          />\n\n          {/* Texto identificador */}\n          <text\n            x={peakX}\n            y={dimensions.height - 10}\n            textAnchor=\"middle\"\n            fill={`hsl(${index * 100}, 80%, 45%)`}\n          >\n            {signal.name || `Señal ${index + 1}`}\n          </text>\n        </g>\n      );\n    });\n  };\n\n  const renderAxes = () => {\n    const ySteps = 6;\n    const xSteps = 6;\n    const xAxis = [];\n    const yAxis = [];\n\n    // Eje X (frecuencia)\n    for (let i = 0; i <= xSteps; i++) {\n      const freq = freqMin + (i / xSteps) * (freqMax - freqMin);\n      const x = mapFreqToX(freq);\n      xAxis.push(\n        <text key={`x-${i}`} x={x} y={dimensions.height - 30} fontSize=\"10\" textAnchor=\"middle\">\n          {freq.toFixed(0)} Hz\n        </text>\n      );\n    }\n\n    // Eje Y (dBm)\n    for (let i = 0; i <= ySteps; i++) {\n      const power = powerMax - (i / ySteps) * (powerMax - powerMin);\n      const y = mapPowerToY(power);\n      yAxis.push(\n        <text key={`y-${i}`} x={5} y={y + 4} fontSize=\"10\">\n          {power.toFixed(0)} dBm\n        </text>\n      );\n    }\n\n    return (\n      <>\n        {/* Ejes */}\n        <line x1={mapFreqToX(freqMin)} y1={mapPowerToY(0)} x2={mapFreqToX(freqMax)} y2={mapPowerToY(0)} stroke=\"#333\" />\n        <line x1={50} y1={0} x2={50} y2={dimensions.height - 50} stroke=\"#333\" />\n        {xAxis}\n        {yAxis}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-xl p-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Visualización del Espectro</h2>\n      <div className=\"relative w-full h-80 bg-gradient-to-b from-gray-50 to-white rounded overflow-hidden\">\n        <svg\n          ref={svgRef}\n          width={dimensions.width}\n          height={dimensions.height}\n          viewBox={`0 0 ${dimensions.width} ${dimensions.height}`}\n          preserveAspectRatio=\"none\"\n          className=\"w-full h-full\"\n        >\n          {renderAxes()}\n          {renderSignals()}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default SpectrumGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}