{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Universidad\\\\7mo Semestre\\\\Redes Inalambricas\\\\project\\\\src\\\\components\\\\SpectrumGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpectrumGraph = ({\n  signals,\n  noiseData\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 800,\n    height: 400\n  });\n  const [hoverPoint, setHoverPoint] = useState(null);\n  const FREQ_MIN = Math.min(...signals.map(s => s.fc - s.bw / 2)) - 50;\n  const FREQ_MAX = Math.max(...signals.map(s => s.fc + s.bw / 2)) + 50;\n  const PWR_MIN = -70;\n  const PWR_MAX = 70;\n  useEffect(() => {\n    const handleResize = () => {\n      var _svgRef$current;\n      if ((_svgRef$current = svgRef.current) !== null && _svgRef$current !== void 0 && _svgRef$current.parentElement) {\n        setDimensions({\n          width: svgRef.current.parentElement.clientWidth,\n          height: 400\n        });\n      }\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const scaleX = freq => (freq - FREQ_MIN) / (FREQ_MAX - FREQ_MIN) * dimensions.width;\n  const scaleY = power => (PWR_MAX - power) / (PWR_MAX - PWR_MIN) * (dimensions.height - 50);\n  const calculateSignalPoints = signal => {\n    const points = [];\n    const startFreq = signal.fc - signal.bw / 2;\n    const endFreq = signal.fc + signal.bw / 2;\n    for (let i = 0; i <= 100; i++) {\n      const freq = startFreq + i / 100 * (endFreq - startFreq);\n      const x = scaleX(freq);\n      const y = scaleY(signal.power * Math.exp(-Math.pow((freq - signal.fc) / (signal.bw / 2), 2)));\n      points.push(`${x},${y}`);\n    }\n    return points.join(' ');\n  };\n  const renderSignals = () => {\n    return signals.map((signal, index) => {\n      const color = `hsl(${index * 90}, 80%, 50%)`;\n      const peakX = scaleX(signal.fc);\n      const peakY = scaleY(signal.power);\n      const cutoffY = scaleY(signal.power - 3);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: `M${calculateSignalPoints(signal)}`,\n          fill: \"none\",\n          stroke: color,\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: peakX - 20,\n          y1: peakY,\n          x2: peakX + 20,\n          y2: peakY,\n          stroke: color,\n          strokeDasharray: \"4,2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: peakX,\n          y: peakY - 10,\n          textAnchor: \"middle\",\n          fill: color,\n          fontSize: \"12\",\n          children: [signal.power, \" dBm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: peakX - 20,\n          y1: cutoffY,\n          x2: peakX + 20,\n          y2: cutoffY,\n          stroke: color,\n          strokeDasharray: \"4,2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: peakX,\n          y: cutoffY - 10,\n          textAnchor: \"middle\",\n          fill: color,\n          fontSize: \"10\",\n          children: \"-3 dBm ca\\xEDda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, `signal-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderNoiseFloor = () => {\n    if (!noiseData) return null;\n    const points = [];\n    for (let i = 0; i <= 100; i++) {\n      const freq = FREQ_MIN + i / 100 * (FREQ_MAX - FREQ_MIN);\n      const x = scaleX(freq);\n      const noise = noiseData.totalNoise + (Math.random() * 4 - 2);\n      const y = scaleY(noise);\n      points.push(`${x},${y}`);\n    }\n    return /*#__PURE__*/_jsxDEV(\"path\", {\n      d: `M${points.join(' ')}`,\n      fill: \"none\",\n      stroke: \"#555\",\n      strokeWidth: \"1.2\",\n      strokeDasharray: \"4,2\",\n      opacity: \"0.6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  };\n  const renderAxes = () => {\n    const ySteps = 7;\n    const stepVal = (PWR_MAX - PWR_MIN) / ySteps;\n    const horizontalLines = [];\n    for (let i = 0; i <= ySteps; i++) {\n      const yVal = PWR_MIN + i * stepVal;\n      const y = scaleY(yVal);\n      horizontalLines.push(/*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: y,\n          x2: dimensions.width,\n          y2: y,\n          stroke: \"#ccc\",\n          strokeDasharray: \"2,2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"5\",\n          y: y - 5,\n          fontSize: \"10\",\n          fill: \"#333\",\n          children: [Math.round(yVal), \" dBm\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, `y-line-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: 0,\n        y1: scaleY(PWR_MIN),\n        x2: dimensions.width,\n        y2: scaleY(PWR_MIN),\n        stroke: \"#333\",\n        strokeWidth: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), horizontalLines]\n    }, void 0, true);\n  };\n  const handleMouseMove = e => {\n    if (!svgRef.current) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const freq = FREQ_MIN + x / dimensions.width * (FREQ_MAX - FREQ_MIN);\n    setHoverPoint({\n      x,\n      freq: freq.toFixed(2)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-xl p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-gray-800\",\n      children: \"Visualizaci\\xF3n del Espectro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-80 bg-gradient-to-b from-gray-50 to-white rounded overflow-hidden\",\n      onMouseMove: handleMouseMove,\n      onMouseLeave: () => setHoverPoint(null),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: dimensions.width,\n        height: dimensions.height,\n        viewBox: `0 0 ${dimensions.width} ${dimensions.height}`,\n        preserveAspectRatio: \"none\",\n        className: \"w-full h-full\",\n        children: [renderAxes(), renderNoiseFloor(), renderSignals(), hoverPoint && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: hoverPoint.x,\n            y1: 0,\n            x2: hoverPoint.x,\n            y2: dimensions.height,\n            stroke: \"#aaa\",\n            strokeDasharray: \"4,2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: hoverPoint.x + 10,\n            y: 20,\n            fill: \"#333\",\n            fontWeight: \"bold\",\n            fontSize: \"12\",\n            children: [hoverPoint.freq, \" Hz\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(SpectrumGraph, \"vzDkEmQeKDJ+NcyXG8f2EJX8ea8=\");\n_c = SpectrumGraph;\nexport default SpectrumGraph;\nvar _c;\n$RefreshReg$(_c, \"SpectrumGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SpectrumGraph","signals","noiseData","_s","svgRef","dimensions","setDimensions","width","height","hoverPoint","setHoverPoint","FREQ_MIN","Math","min","map","s","fc","bw","FREQ_MAX","max","PWR_MIN","PWR_MAX","handleResize","_svgRef$current","current","parentElement","clientWidth","window","addEventListener","removeEventListener","scaleX","freq","scaleY","power","calculateSignalPoints","signal","points","startFreq","endFreq","i","x","y","exp","pow","push","join","renderSignals","index","color","peakX","peakY","cutoffY","children","d","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","strokeDasharray","textAnchor","fontSize","renderNoiseFloor","noise","totalNoise","random","opacity","renderAxes","ySteps","stepVal","horizontalLines","yVal","round","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","toFixed","className","onMouseMove","onMouseLeave","ref","viewBox","preserveAspectRatio","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Universidad/7mo Semestre/Redes Inalambricas/project/src/components/SpectrumGraph.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst SpectrumGraph = ({ signals, noiseData }) => {\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 800, height: 400 });\n  const [hoverPoint, setHoverPoint] = useState(null);\n\n  const FREQ_MIN = Math.min(...signals.map(s => s.fc - s.bw / 2)) - 50;\n  const FREQ_MAX = Math.max(...signals.map(s => s.fc + s.bw / 2)) + 50;\n  const PWR_MIN = -70;\n  const PWR_MAX = 70;\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (svgRef.current?.parentElement) {\n        setDimensions({\n          width: svgRef.current.parentElement.clientWidth,\n          height: 400\n        });\n      }\n    };\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const scaleX = (freq) =>\n    ((freq - FREQ_MIN) / (FREQ_MAX - FREQ_MIN)) * dimensions.width;\n\n  const scaleY = (power) =>\n    ((PWR_MAX - power) / (PWR_MAX - PWR_MIN)) * (dimensions.height - 50);\n\n  const calculateSignalPoints = (signal) => {\n    const points = [];\n    const startFreq = signal.fc - signal.bw / 2;\n    const endFreq = signal.fc + signal.bw / 2;\n\n    for (let i = 0; i <= 100; i++) {\n      const freq = startFreq + (i / 100) * (endFreq - startFreq);\n      const x = scaleX(freq);\n      const y = scaleY(signal.power * Math.exp(-Math.pow((freq - signal.fc) / (signal.bw / 2), 2)));\n\n      points.push(`${x},${y}`);\n    }\n\n    return points.join(' ');\n  };\n\n  const renderSignals = () => {\n    return signals.map((signal, index) => {\n      const color = `hsl(${index * 90}, 80%, 50%)`;\n      const peakX = scaleX(signal.fc);\n      const peakY = scaleY(signal.power);\n      const cutoffY = scaleY(signal.power - 3);\n\n      return (\n        <g key={`signal-${index}`}>\n          <path\n            d={`M${calculateSignalPoints(signal)}`}\n            fill=\"none\"\n            stroke={color}\n            strokeWidth=\"2\"\n          />\n          {/* Línea de pico */}\n          <line\n            x1={peakX - 20}\n            y1={peakY}\n            x2={peakX + 20}\n            y2={peakY}\n            stroke={color}\n            strokeDasharray=\"4,2\"\n          />\n          <text x={peakX} y={peakY - 10} textAnchor=\"middle\" fill={color} fontSize=\"12\">\n            {signal.power} dBm\n          </text>\n\n          {/* Línea de -3dBm */}\n          <line\n            x1={peakX - 20}\n            y1={cutoffY}\n            x2={peakX + 20}\n            y2={cutoffY}\n            stroke={color}\n            strokeDasharray=\"4,2\"\n          />\n          <text x={peakX} y={cutoffY - 10} textAnchor=\"middle\" fill={color} fontSize=\"10\">\n            -3 dBm caída\n          </text>\n        </g>\n      );\n    });\n  };\n\n  const renderNoiseFloor = () => {\n    if (!noiseData) return null;\n\n    const points = [];\n    for (let i = 0; i <= 100; i++) {\n      const freq = FREQ_MIN + (i / 100) * (FREQ_MAX - FREQ_MIN);\n      const x = scaleX(freq);\n      const noise = noiseData.totalNoise + (Math.random() * 4 - 2);\n      const y = scaleY(noise);\n      points.push(`${x},${y}`);\n    }\n\n    return (\n      <path\n        d={`M${points.join(' ')}`}\n        fill=\"none\"\n        stroke=\"#555\"\n        strokeWidth=\"1.2\"\n        strokeDasharray=\"4,2\"\n        opacity=\"0.6\"\n      />\n    );\n  };\n\n  const renderAxes = () => {\n    const ySteps = 7;\n    const stepVal = (PWR_MAX - PWR_MIN) / ySteps;\n    const horizontalLines = [];\n\n    for (let i = 0; i <= ySteps; i++) {\n      const yVal = PWR_MIN + i * stepVal;\n      const y = scaleY(yVal);\n      horizontalLines.push(\n        <g key={`y-line-${i}`}>\n          <line x1=\"0\" y1={y} x2={dimensions.width} y2={y} stroke=\"#ccc\" strokeDasharray=\"2,2\" />\n          <text x=\"5\" y={y - 5} fontSize=\"10\" fill=\"#333\">\n            {Math.round(yVal)} dBm\n          </text>\n        </g>\n      );\n    }\n\n    return (\n      <>\n        <line\n          x1={0}\n          y1={scaleY(PWR_MIN)}\n          x2={dimensions.width}\n          y2={scaleY(PWR_MIN)}\n          stroke=\"#333\"\n          strokeWidth=\"2\"\n        />\n        {horizontalLines}\n      </>\n    );\n  };\n\n  const handleMouseMove = (e) => {\n    if (!svgRef.current) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const freq = FREQ_MIN + (x / dimensions.width) * (FREQ_MAX - FREQ_MIN);\n\n    setHoverPoint({\n      x,\n      freq: freq.toFixed(2),\n    });\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-xl p-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Visualización del Espectro</h2>\n      <div\n        className=\"relative w-full h-80 bg-gradient-to-b from-gray-50 to-white rounded overflow-hidden\"\n        onMouseMove={handleMouseMove}\n        onMouseLeave={() => setHoverPoint(null)}\n      >\n        <svg\n          ref={svgRef}\n          width={dimensions.width}\n          height={dimensions.height}\n          viewBox={`0 0 ${dimensions.width} ${dimensions.height}`}\n          preserveAspectRatio=\"none\"\n          className=\"w-full h-full\"\n        >\n          {renderAxes()}\n          {renderNoiseFloor()}\n          {renderSignals()}\n\n          {hoverPoint && (\n            <>\n              <line\n                x1={hoverPoint.x}\n                y1={0}\n                x2={hoverPoint.x}\n                y2={dimensions.height}\n                stroke=\"#aaa\"\n                strokeDasharray=\"4,2\"\n              />\n              <text\n                x={hoverPoint.x + 10}\n                y={20}\n                fill=\"#333\"\n                fontWeight=\"bold\"\n                fontSize=\"12\"\n              >\n                {hoverPoint.freq} Hz\n              </text>\n            </>\n          )}\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default SpectrumGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}